@model Employee_Records_Management_MVC.Models.EmployeeProfiles
@{
    ViewData["Title"] = "Create";
}
<h1>Add Employee</h1>
@*@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger">
        @ViewBag.ErrorMessage
    </div>
}*@


<style>

    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        padding: 0;
    }

    .dateOfBirth, .radio, #DepartmentID {
        cursor: pointer;
    }

    h4 {
        font-size: 20px;
        margin: 20px 0;
        text-align: center;
    }

    .container {
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }

    label.error {
        font-weight: 700;
        display: block;
        color: indianred;
        font-size: 14px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    label {
        font-weight: bold;
    }

    input[type="text"] {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 3px;
    }

    input[type="submit"] {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 3px;
        cursor: pointer;
    }

    input[type="submit"]:hover {
        background-color: #0056b3;
    }

    .text-danger {
        color: red;
    }

    .radio-container {
        display: flex;
    }

    .radio-option {
        margin-right: 20px; /* Adjust margin as needed */
    }
</style>

<body>
    <hr />
    <div class="form-group">
        <form id="employeeForm" action="/EmployeeMVC/Create" autocomplete="off" method="post">
            <div class="form-group">
                <label for="FirstName"><span class="text-danger">*</span>First Name</label>
                <input type="text" id="FirstName" name="FirstName" class="form-control" maxlength="50" 
                pattern="/^[A-Za-z0-9 ]+$/"
                title="Name must not contain any Special Characters" required />              
                <span class="text-danger" asp-validation-for="FirstName"></span>
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="LastName">Last Name</label>
                <input type="text" id="LastName" name="LastName" class="form-control" maxlength="50"  />
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="DepartmentID"><span class="text-danger">*</span>Department</label> <br />
                <select id="DepartmentID" name="DepartmentID" class="form-control form-select" required>
                    <option value="">Select Department</option>
                    @if (Model.DepartmentList != null)
                    {
                        foreach (var department in Model.DepartmentList)
                        {
                            <option value="@department.DepartmentID">@department.DepartmentName</option>
                        }
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="DateOfBirth" class="dateOfBirth"><span class="text-danger">*</span>Date Of Birth</label>
                <input id="DateOfBirth" name="DateOfBirth" class="form-control" type="date" required="required" placeholder="Select a Date" data-date-format="dd-mm-yy">

                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <div><label for="Gender" id="Gender"><span class="text-danger">*</span>Gender</label></div>
                <div>
                    <input type="radio" id="Male" name="Gender" class="radio" value="Male"> Male &nbsp; &nbsp;
                    <input type="radio" id="Female" name="Gender" class="radio" value="Female"> Female
                </div>
            </div>
            <div class="form-group">
                <label for="EmailAddress"><span class="text-danger">*</span>Email Address</label>
                <input type="email" id="EmailAddress" name="EmailAddress" class="form-control" maxlength="200" required />
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="PhoneNumber"><span class="text-danger">*</span>Phone Number</label>
                <input type="text" id="PhoneNumber" name="PhoneNumber" maxlength="14" required />                
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="Address"><span class="text-danger">*</span>Address</label>
                <input type="text" id="Address" name="Address" class="form-control" maxlength="1000" required />
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Add Employee" id="btn_sub" class="btn btn-primary" />
                <a href="/EmployeeMVC/Index/" class="btn btn-primary" style="float: right;">Back to List</a>
            </div>
        </form>
    </div>
</body>

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" ></script>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/5.0.8/jquery.inputmask.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.20.0/jquery.validate.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        $.validator.addMethod("noSpecialChars", function (value, element) {
            return /^[A-Za-z0-9 ]+$/.test(value);
        }, "Please enter a valid First Name without special characters.");
        $(document).ready(function () {
            // Initialize phone number masking
            $("#PhoneNumber").inputmask("(999)999-9999");
            $("#employeeForm").validate({
                rules: {
                    FirstName: {
                        required: true,
                        minlength: 2,
                        noSpecialChars: true
                    },
                    //LastName: {
                    //    required: true
                    //},
                    DepartmentID: {
                        required: true
                        //selectcheck: true
                    },
                    DateOfBirth: { required: true, date: true },
                    EmailAddress: { required: true, email: true, minlength: 2 },
                    Gender: {
                        required: true
                    },
                    PhoneNumber: {
                        required: true,
                        maxlength: 14,
                        minlength: 10
                    },
                    Address: "required"
                },
                messages: {
                    FirstName: {
                        required: "Please enter your First Name",
                        minlength: "Please enter a valid Name"
                    },
                    //LastName: {
                    //    required: "Please enter your Last Name"
                    //},
                    DepartmentID: "Please select a department",
                    DateOfBirth: {
                        required: "Please Enter your date of birth",
                        date: "Please enter correct date format"
                    },
                    EmailAddress: {
                        required: "Please enter your Email Id",
                        minlength: "Please enter a valid Email Address"
                    },
                    Gender: {
                        required: "Please select a gender."
                    },
                    PhoneNumber: {
                        required: "Please enter your Phone Number",
                        maxlength: "Phone Number should not exceed 12 numbers",
                        minlength: "Phone Number should have minimum 10 numbers"
                    },
                    Address: "Please enter your complete address"
                },
                errorPlacement: function (error, element) {
                    if (element.attr("name") === "Gender") {
                        error.insertAfter(element.closest('.form-group'));
                    } else {
                        error.insertAfter(element);
                    }
                }
            });
        });
        dateconfig = {
            altInput: true,
            altFormat: "d-m-Y",
            dateFormat: "Y-m-d",
            minDate: "1960-01-01", 
            maxDate: "today"
        };
        flatpickr("input[type=date]", dateconfig);

        $("#employeeForm").on("submit", function (event) {
            event.preventDefault(); // Prevent the default form submission
            if ($(this).valid()) {
                var formData = $(this).serialize();
                console.log('Form is valid. Sending AJAX request...');

                $.ajax({
                    type: "POST",
                    url: "/EmployeeMVC/Create",
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            toastr.success("Created Successfully!");
                            setTimeout(function () {
                                if (response.redirect) {
                                    window.location.href = response.redirect;
                                }
                            }, 2000); // 2000 milliseconds (2 seconds) delay
                        } else {
                            toastr.error("Error Creating Employee: " + response.message);
                        }
                    },
                    error: function (error) {
                        toastr.error("Error submitting form: " + error.responseText);
                    }
                });
            } else {
                console.log('Form is not valid. Will not submit.');
            }
        });                
    </script>
}
@*oninput="validateInput(this)" required*@